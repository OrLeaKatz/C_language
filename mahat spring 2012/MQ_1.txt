printf 1: 11
printf 2: 20
printf 3: 13
printf 4: 2
printf 5: 6 
printf 6: -15
------------------------------------------------------------------
#include <stdio.h>
#define f1(x) x*x
#define	f2(x) *x
#define	f3(x, y) x/y
#define	f4(x,y,z)  f3(y,z)+f1(x)


int main()
{
	int x, y = 2, z = 3, t = 4, m = 5;
	int v[2];
	int* ptr1, * ptr2;
	printf("%d\n", f4(z, t, y)); 			//2+9=11 LB
	ptr1 = &t;
	ptr2 = &m;
	printf("%d\n", f2(ptr1)f2(m));			//20 LB
	v[0] = f2(ptr2);						//v[0] = 5
	v[1] = z;								//v[1] = 3
	while (f2(v))
	{
		v[1] += 2;							//3+2+2+2+2+2 = 13
		v[0]--;								//0
	}
	printf("%d\n", v[1]);					// 13 LB

	x = (f3(m, z) == f3(z, y)) ? 2: 4;		// 5/3 != 3/2 -> 2
	printf("%d\n", x);						//2 LB
	v[0] = y;								//2
	v[1] = 0;								//0
	switch (v[0]) {
	case 1: v[1] += 1;
	case 2: v[1] += 2;					//‚Üê v[1] = 2
	case 3: v[1] += 3;					// V[1] = 5
	default: v[1]++;					// V[1] = 6
	}
	printf("%d\n", v[1]);					//6 LB
	v[0] = m;								//5
	x = 0;									//x = 0
	while (!(--v[0] % 2))					//x10 runs never gets to a even number in the condition so runs till the break, takes v[0] down by 2 each round starting from 5 for 10 rounds
	{
		v[0]--;								//sets v[0] to an odd number
		x++;
		if (x == 10) break;					//breaks the loop after 10 rounds
	}
	printf("%d\n", v[0]);					//-15 LB

	return 0;